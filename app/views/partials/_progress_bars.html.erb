<div class = 'card bg-white progressBarWrapper'>
    <div class='card-header'>
        <h4>Donation Progress</h4>
    </div>
    <div class="card-body">
        <h4>Donation Progress</h4>

            <div class="progress-element">
                <label>Total</label>
                <div class="total-progress progress"></div>
            </div>
        
            <!-- Button trigger modal -->
            <%= link_to 'Add a New Goal', new_goal_path, remote:true, class: 'btn btn-primary', 'data-target'=>'#newGoalModal', 'data-toggle'=>'modal' %>
           
 
    </div> 
</div>

<!-- Modal -->
<div class="modal fade" id="newGoalModal" tabindex="-1" role="dialog" aria-labelledby="newGoalModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="newGoalModalLabel">New Goal</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
// Progress bars

var aaProgress =  <%= raw @aa_progress.to_json %>,
    ccProgress = <%= raw @cc_progress.to_json %>,
    cpProgress = <%= raw @cp_progress.to_json %>,
    dgProgress = <%= raw @dg_progress.to_json %>,
    mhProgress = <%= raw @mh_progress.to_json %>,
    sgProgress = <%= raw @sg_progress.to_json %>
    
console.log(aaProgress, ccProgress, cpProgress, dgProgress, mhProgress, sgProgress)

// have to call the class later for each of the progress bars

function progressBar(c){
    var svg = d3.select(c)
    .append('svg')
    .attr('height', "1.5rem")
    .attr('width', 500);

    var states = ['started', 'inProgress', 'completed'],
    segmentWidth = 100,
    currentState = 'started';

    var colorScale = d3.scale.ordinal()
        .domain(states)
        .range(['yellow', 'orange', 'green']);

svg.append('rect')
    .attr('class', 'bg-rect')
    .attr('rx', 10)
    .attr('ry', 10)
    .attr('fill', 'gray')
    .attr('height', "1.5rem")
    .attr('width', function(){
        return segmentWidth * states.length;
    })
    .attr('x', 0);

    var progress = svg.append('rect')
                .attr('class', 'progress-rect')
                // color everything blue for now, add color thresholds later
                .attr('fill', function(){
                    return colorScale(c);
                })
                .attr('height', "1.5rem")
                .attr('width', 0)
                .attr('rx', 10)
                .attr('ry', 10)
                .attr('x', 0);

var progressText = svg.append("svg:text")
                    .attr("text-anchor","end")
                    .attr('x',2)
                    .attr('y',10)
                    .text(function(d){
                      
                    })

                    progress.transition()
                    .duration(1000)
                    .attr('width', function(){
                        var index = states.indexOf(currentState);
                        return (index + 1) * segmentWidth;
                    });
                
                function moveProgressBar(state){
                    progress.transition()
                        .duration(1000)
                        .attr('fill', function(){
                            return colorScale();
                        })
                        .attr('width', function(){
                            var index = states.indexOf(state);
                            return (index + 1) * segmentWidth;
                        });
                }

}


progressBar(".total-progress")






</script>